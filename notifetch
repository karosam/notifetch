#!/usr/bin/env bash
# Possible values:
# user date upos kernel wm mem bat backlight vol wifi pkg sh
config=("user" "time" "date" "uptime" "os" "kernel" "wm" "mem" "bat" "backlight" "vol" "pkg" "sh" "wifi")
level="critical"
for val in ${config[*]}
do
    case $val in
        user)
            user="$USER@$(cat /proc/sys/kernel/hostname)"
            argconf+=' '$user'\n'
        ;;
        vol)
            vol="$(amixer -D pulse get Master | grep '%' | head -n 1 | cut -d '[' -f 2 | cut -d '%' -f 1)"
            argconf+=' '$vol'%\n'
        ;;
        bat)
            if [ -f /sys/class/power_supply/*BAT*/capacity ]
            then
                bat="$(cat /sys/class/power_supply/*BAT*/capacity)"
            elif command -v acpi &> /dev/null
            then
                bat="$(acpi | cut -f 2 -d ',' | sed 's/ //g' | sed 's/%//g')"
            else
                bat="$(awk "BEGIN {print int($(cat /sys/class/power_supply/*BAT*/charge_now)/$(cat /sys/class/power_supply/*BAT*/charge_full)*100)}")"
            fi
            argconf+=' '$bat'%\n'
        ;;
        mem)
            mem="$(free -m | tail -n 2 | head -n 1 | awk '{ print $3 }')"
            mem2="$(free -m | tail -n 2 | head -n 1 | awk '{ print $5 }')"
            totmem="$((mem + mem2))"
            totmem="$(echo $totmem | sed 's/$/M/')"
            mem="$(echo $mem | sed 's/$/M/')"
            mem2="$(echo $mem2 | sed 's/$/M/')"
            argconf+=' '$mem/$mem2/$totmem'\n'
        ;;
        date)
            date="$(date +"%a %F")"
            argconf+=' '$date'\n'
        ;;
        time)
            time="$(date +"%H:%M %p")"
            argconf+=' '$time'\n'
        ;;
        wifi)
            wifi="$(iw dev wlan0 link | grep 'SSID' | cut -f 2 -d ':' | sed 's/ //g')"
            argconf+='直 '$wifi'\n'
        ;;
        backlight)
            bckl="$(awk "BEGIN {print int(($(cat /sys/class/backlight/*/brightness)/$(cat /sys/class/backlight/*/max_brightness)*100)+0.5)}")"
            argconf+=' '$bckl'%\n'
        ;;
        os)
            os="$(cat /etc/os-release | grep NAME | head -n 1 | cut -f 2 -d '=' | sed 's/"//g')"
            argconf+=' '$os'\n'
        ;;
        kernel)
            kernel="$(uname -r | cut -f 1 -d '-')"
            argconf+=' '$kernel'\n'
        ;;
        uptime)
            uptime="$(uptime | cut -f 1 -d ',' | sed -E 's/^[^,]*up *//; s/, *[[:digit:]]* users.*//; s/min/minutes/; s/([[:digit:]]+):0?([[:digit:]]+)/\1 hours, \2 minutes/')"
            argconf+=' '$uptime'\n'
        ;;
        wm)
            id=$(xprop -root -notype _NET_SUPPORTING_WM_CHECK)
            id=${id##* }
            wm="$(xprop -id "$id" -notype -len 25 -f _NET_WM_NAME 8t | grep 'WM_NAME' | cut -f 2 -d '=' | sed 's/ //g;s/"//g')"
            argconf+=' '$wm'\n'
        ;;
        pkg)
            if command -v pacman &> /dev/null
            then
                pkg="$(pacman -Qq | wc -l)"
            elif command -v dpkg &> /dev/null
            then
                pkg="$(dpkg --list | wc -l)"
            elif command -v yum &> /dev/null
            then
                pkg="$(yum list installed | wc -l)"
            elif command -v apt &> /dev/null
            then
                pkg="$(apt list --installed | wc -l)"
            fi 
            argconf+=' '$pkg'\n'
        ;;
        sh)
            sh="$(echo $SHELL)"
            argconf+=' '$sh'\n'
        ;;
    esac
done

if command -v dunstify &> /dev/null
then
    dunstify -u $level -r 200 notifetch "$argconf"
else
    notify-send -u $level notifetch "$argconf"
fi
