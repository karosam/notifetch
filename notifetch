#!/usr/bin/env bash
# Possible values:
# user date uptime os kernel wm mem bat backlight vol wifi pkg sh weather music disk
config=("user" "time" "date" "uptime" "os" "kernel" "wm" "mem" "pkg" "sh" "weather" "music" "disk" "wifi")
level="normal"
weather_city="London"
use_disk=("/dev/sda1")
user_prefix=""
vol_prefix=""
bat_prefix=""
mem_prefix=""
date_prefix=""
time_prefix=""
wifi_prefix="直"
music_prefix=""
weather_prefix="摒"
backlight_prefix=""
os_prefix=""
kernel_prefix=""
uptime_prefix=""
wm_prefix=""
pkg_prefix=""
sh_prefix=""
disk_prefix=""
for val in ${config[*]}
do
    case $val in
        user)
            user="$USER@$(cat /proc/sys/kernel/hostname)"
            argconf+=$user_prefix' '$user'\n'
        ;;
        vol)
            vol="$(amixer -D pulse get Master | grep '%' | head -n 1 | cut -d '[' -f 2 | cut -d '%' -f 1)"
            argconf+=$vol_prefix' '$vol'%\n'
        ;;
        disk)
            for disk in ${use_disk[*]}
            do
                echo $disk
                if [ $(df | grep $disk | wc -l) -gt 0 ]
                then
                    disk_size="$(df -h | grep $disk | awk '{print $2}')"
                    disk_used="$(df -h | grep $disk | awk '{print $3}')"
                    disk_avail="$(df -h | grep $disk | awk '{print $4}' | sed 's/$/ free/')"
                    disk_perc_used="$(df -h | grep $disk | awk '{print $5}')"
                    argconf+=$disk_prefix' '$disk_used' / '$disk_size' ('$disk_perc_used'), '$disk_avail'\n'
                else
                    argconf+=$disk_prefix' '$disk' not mounted/connected\n'
                fi
            done
        ;;
        bat)
            if [ -d /sys/class/power_supply/*BAT*/ ]
            then
                if [ -f /sys/class/power_supply/*BAT*/capacity ]
                then
                    bat="$(cat /sys/class/power_supply/*BAT*/capacity)"
                elif command -v acpi &> /dev/null
                then
                    bat="$(acpi | cut -f 2 -d ',' | sed 's/ //g' | sed 's/%//g')"
                else
                    bat="$(awk "BEGIN {print int($(cat /sys/class/power_supply/*BAT*/charge_now)/$(cat /sys/class/power_supply/*BAT*/charge_full)*100)}")"
                fi
                argconf+=$bat_prefix' '$bat'%\n'
            fi
        ;;
        mem)
            mem="$(free -m | tail -n 2 | head -n 1 | awk '{ print $3 }')"
            mem2="$(free -m | tail -n 2 | head -n 1 | awk '{ print $5 }')"
            totmem="$((mem + mem2))"
            totmem="$(echo $totmem | sed 's/$/M/')"
            mem="$(echo $mem | sed 's/$/M/')"
            mem2="$(echo $mem2 | sed 's/$/M/')"
            argconf+=$mem_prefix' '$mem/$mem2/$totmem'\n'
        ;;
        date)
            date="$(date +"%a %F")"
            argconf+=$date_prefix' '$date'\n'
        ;;
        time)
            time="$(date +"%H:%M %p")"
            argconf+=$time_prefix' '$time'\n'
        ;;
        wifi)
            if command -v iw &> /dev/null
            then
                wifi="$(iw dev wlan0 link | grep 'SSID' | cut -f 2 -d ':' | sed 's/ //g')"
                argconf+=$wifi_prefix' '$wifi'\n'
            fi
        ;;
        music)
            if command -v mpc &> /dev/null
            then
                music="$(mpc current)"
                argconf+=$music_prefix' '$music'\n'
            fi
        ;;
        weather)
            weather="$(curl -s http://wttr.in/$weather_city?format=3)"
            argconf+=$weather_prefix' '$weather'\n'
        ;;
        backlight)
            if [ -d /sys/class/backlight ]
            then
                bckl="$(awk "BEGIN {print int(($(cat /sys/class/backlight/*/brightness)/$(cat /sys/class/backlight/*/max_brightness)*100)+0.5)}")"
                argconf+=$backlight_prefix' '$bckl'%\n'
            fi
        ;;
        os)
            os="$(cat /etc/os-release | grep NAME | head -n 1 | cut -f 2 -d '=' | sed 's/"//g')"
            argconf+=$os_prefix' '$os'\n'
        ;;
        kernel)
            kernel="$(uname -r | cut -f 1 -d '-')"
            argconf+=$kernel_prefix' '$kernel'\n'
        ;;
        uptime)
            uptime="$(uptime | cut -f 1 -d ',' | sed -E 's/^[^,]*up *//; s/, *[[:digit:]]* users.*//; s/min/minutes/; s/([[:digit:]]+):0?([[:digit:]]+)/\1 hours, \2 minutes/')"
            argconf+=$uptime_prefix' '$uptime'\n'
        ;;
        wm)
            id=$(xprop -root -notype _NET_SUPPORTING_WM_CHECK)
            id=${id##* }
            wm="$(xprop -id "$id" -notype -len 25 -f _NET_WM_NAME 8t | grep 'WM_NAME' | cut -f 2 -d '=' | sed 's/ //g;s/"//g')"
            argconf+=$wm_prefix' '$wm'\n'
        ;;
        pkg)
            if command -v pacman &> /dev/null
            then
                pkg="$(pacman -Qq | wc -l)"
            elif command -v dpkg &> /dev/null
            then
                pkg="$(dpkg --list | wc -l)"
            elif command -v yum &> /dev/null
            then
                pkg="$(yum list installed | wc -l)"
            elif command -v apt &> /dev/null
            then
                pkg="$(apt list --installed | wc -l)"
            fi 
            argconf+=$pkg_prefix' '$pkg'\n'
        ;;
        sh)
            sh="$(echo $SHELL)"
            argconf+=$sh_prefix' '$sh'\n'
        ;;
    esac
done

if command -v dunstify &> /dev/null
then
    dunstify -u $level -r 200 notifetch "$argconf"
else
    notify-send -u $level notifetch "$argconf"
fi
